// disenyo_qsys.v

// Generated using ACDS version 19.1 670

`timescale 1 ps / 1 ps
module disenyo_qsys (
		input  wire        clk_clk,          //        clk.clk
		input  wire        reset_reset_n,    //      reset.reset_n
		output wire        sdram_clk_clk,    //  sdram_clk.clk
		output wire [12:0] sdram_wire_addr,  // sdram_wire.addr
		output wire [1:0]  sdram_wire_ba,    //           .ba
		output wire        sdram_wire_cas_n, //           .cas_n
		output wire        sdram_wire_cke,   //           .cke
		output wire        sdram_wire_cs_n,  //           .cs_n
		inout  wire [31:0] sdram_wire_dq,    //           .dq
		output wire [3:0]  sdram_wire_dqm,   //           .dqm
		output wire        sdram_wire_ras_n, //           .ras_n
		output wire        sdram_wire_we_n   //           .we_n
	);

	wire         sys_sdram_pll_0_sys_clk_clk;                               // sys_sdram_pll_0:sys_clk_clk -> [ensamblado_procesador_0:reloj, master_0:clk_clk, mm_interconnect_0:sys_sdram_pll_0_sys_clk_clk, new_sdram_controller_0:clk, rst_controller:clk]
	wire  [31:0] ensamblado_procesador_0_avalon_master_b_readdata;          // mm_interconnect_0:ensamblado_procesador_0_avalon_master_B_readdata -> ensamblado_procesador_0:readdata_B
	wire         ensamblado_procesador_0_avalon_master_b_waitrequest;       // mm_interconnect_0:ensamblado_procesador_0_avalon_master_B_waitrequest -> ensamblado_procesador_0:waitrequest_B
	wire  [31:0] ensamblado_procesador_0_avalon_master_b_address;           // ensamblado_procesador_0:address_B -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_B_address
	wire         ensamblado_procesador_0_avalon_master_b_read;              // ensamblado_procesador_0:read_B -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_B_read
	wire   [3:0] ensamblado_procesador_0_avalon_master_b_byteenable;        // ensamblado_procesador_0:byteenable_B -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_B_byteenable
	wire         ensamblado_procesador_0_avalon_master_b_readdatavalid;     // mm_interconnect_0:ensamblado_procesador_0_avalon_master_B_readdatavalid -> ensamblado_procesador_0:readdatavalid_B
	wire  [31:0] ensamblado_procesador_0_avalon_master_m_readdata;          // mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_readdata -> ensamblado_procesador_0:readdata_M
	wire         ensamblado_procesador_0_avalon_master_m_waitrequest;       // mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_waitrequest -> ensamblado_procesador_0:waitrequest_M
	wire  [31:0] ensamblado_procesador_0_avalon_master_m_address;           // ensamblado_procesador_0:address_M -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_address
	wire   [3:0] ensamblado_procesador_0_avalon_master_m_byteenable;        // ensamblado_procesador_0:byteenable_M -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_byteenable
	wire         ensamblado_procesador_0_avalon_master_m_read;              // ensamblado_procesador_0:read_M -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_read
	wire         ensamblado_procesador_0_avalon_master_m_readdatavalid;     // mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_readdatavalid -> ensamblado_procesador_0:readdatavalid_M
	wire         ensamblado_procesador_0_avalon_master_m_write;             // ensamblado_procesador_0:write_M -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_write
	wire  [31:0] ensamblado_procesador_0_avalon_master_m_writedata;         // ensamblado_procesador_0:writedata_M -> mm_interconnect_0:ensamblado_procesador_0_avalon_master_M_writedata
	wire  [31:0] master_0_master_readdata;                                  // mm_interconnect_0:master_0_master_readdata -> master_0:master_readdata
	wire         master_0_master_waitrequest;                               // mm_interconnect_0:master_0_master_waitrequest -> master_0:master_waitrequest
	wire  [31:0] master_0_master_address;                                   // master_0:master_address -> mm_interconnect_0:master_0_master_address
	wire         master_0_master_read;                                      // master_0:master_read -> mm_interconnect_0:master_0_master_read
	wire   [3:0] master_0_master_byteenable;                                // master_0:master_byteenable -> mm_interconnect_0:master_0_master_byteenable
	wire         master_0_master_readdatavalid;                             // mm_interconnect_0:master_0_master_readdatavalid -> master_0:master_readdatavalid
	wire         master_0_master_write;                                     // master_0:master_write -> mm_interconnect_0:master_0_master_write
	wire  [31:0] master_0_master_writedata;                                 // master_0:master_writedata -> mm_interconnect_0:master_0_master_writedata
	wire         mm_interconnect_0_new_sdram_controller_0_s1_chipselect;    // mm_interconnect_0:new_sdram_controller_0_s1_chipselect -> new_sdram_controller_0:az_cs
	wire  [31:0] mm_interconnect_0_new_sdram_controller_0_s1_readdata;      // new_sdram_controller_0:za_data -> mm_interconnect_0:new_sdram_controller_0_s1_readdata
	wire         mm_interconnect_0_new_sdram_controller_0_s1_waitrequest;   // new_sdram_controller_0:za_waitrequest -> mm_interconnect_0:new_sdram_controller_0_s1_waitrequest
	wire  [24:0] mm_interconnect_0_new_sdram_controller_0_s1_address;       // mm_interconnect_0:new_sdram_controller_0_s1_address -> new_sdram_controller_0:az_addr
	wire         mm_interconnect_0_new_sdram_controller_0_s1_read;          // mm_interconnect_0:new_sdram_controller_0_s1_read -> new_sdram_controller_0:az_rd_n
	wire   [3:0] mm_interconnect_0_new_sdram_controller_0_s1_byteenable;    // mm_interconnect_0:new_sdram_controller_0_s1_byteenable -> new_sdram_controller_0:az_be_n
	wire         mm_interconnect_0_new_sdram_controller_0_s1_readdatavalid; // new_sdram_controller_0:za_valid -> mm_interconnect_0:new_sdram_controller_0_s1_readdatavalid
	wire         mm_interconnect_0_new_sdram_controller_0_s1_write;         // mm_interconnect_0:new_sdram_controller_0_s1_write -> new_sdram_controller_0:az_wr_n
	wire  [31:0] mm_interconnect_0_new_sdram_controller_0_s1_writedata;     // mm_interconnect_0:new_sdram_controller_0_s1_writedata -> new_sdram_controller_0:az_data
	wire         rst_controller_reset_out_reset;                            // rst_controller:reset_out -> [ensamblado_procesador_0:Pcero, mm_interconnect_0:ensamblado_procesador_0_reset_sink_reset_bridge_in_reset_reset, mm_interconnect_0:master_0_clk_reset_reset_bridge_in_reset_reset, new_sdram_controller_0:reset_n]
	wire         master_0_master_reset_reset;                               // master_0:master_reset_reset -> [rst_controller:reset_in1, rst_controller_001:reset_in1]
	wire         sys_sdram_pll_0_reset_source_reset;                        // sys_sdram_pll_0:reset_source_reset -> [rst_controller:reset_in2, rst_controller_001:reset_in2]
	wire         rst_controller_001_reset_out_reset;                        // rst_controller_001:reset_out -> master_0:clk_reset_reset
	wire         rst_controller_002_reset_out_reset;                        // rst_controller_002:reset_out -> sys_sdram_pll_0:ref_reset_reset

	ensamblado_procesador ensamblado_procesador_0 (
		.reloj           (sys_sdram_pll_0_sys_clk_clk),                           //      clock_sink.clk
		.Pcero           (rst_controller_reset_out_reset),                        //      reset_sink.reset
		.address_M       (ensamblado_procesador_0_avalon_master_m_address),       // avalon_master_M.address
		.byteenable_M    (ensamblado_procesador_0_avalon_master_m_byteenable),    //                .byteenable
		.read_M          (ensamblado_procesador_0_avalon_master_m_read),          //                .read
		.readdata_M      (ensamblado_procesador_0_avalon_master_m_readdata),      //                .readdata
		.readdatavalid_M (ensamblado_procesador_0_avalon_master_m_readdatavalid), //                .readdatavalid
		.waitrequest_M   (ensamblado_procesador_0_avalon_master_m_waitrequest),   //                .waitrequest
		.write_M         (ensamblado_procesador_0_avalon_master_m_write),         //                .write
		.writedata_M     (ensamblado_procesador_0_avalon_master_m_writedata),     //                .writedata
		.address_B       (ensamblado_procesador_0_avalon_master_b_address),       // avalon_master_B.address
		.readdata_B      (ensamblado_procesador_0_avalon_master_b_readdata),      //                .readdata
		.read_B          (ensamblado_procesador_0_avalon_master_b_read),          //                .read
		.byteenable_B    (ensamblado_procesador_0_avalon_master_b_byteenable),    //                .byteenable
		.waitrequest_B   (ensamblado_procesador_0_avalon_master_b_waitrequest),   //                .waitrequest
		.readdatavalid_B (ensamblado_procesador_0_avalon_master_b_readdatavalid)  //                .readdatavalid
	);

	disenyo_qsys_master_0 #(
		.USE_PLI     (0),
		.PLI_PORT    (50000),
		.FIFO_DEPTHS (2)
	) master_0 (
		.clk_clk              (sys_sdram_pll_0_sys_clk_clk),        //          clk.clk
		.clk_reset_reset      (rst_controller_001_reset_out_reset), //    clk_reset.reset
		.master_address       (master_0_master_address),            //       master.address
		.master_readdata      (master_0_master_readdata),           //             .readdata
		.master_read          (master_0_master_read),               //             .read
		.master_write         (master_0_master_write),              //             .write
		.master_writedata     (master_0_master_writedata),          //             .writedata
		.master_waitrequest   (master_0_master_waitrequest),        //             .waitrequest
		.master_readdatavalid (master_0_master_readdatavalid),      //             .readdatavalid
		.master_byteenable    (master_0_master_byteenable),         //             .byteenable
		.master_reset_reset   (master_0_master_reset_reset)         // master_reset.reset
	);

	disenyo_qsys_new_sdram_controller_0 new_sdram_controller_0 (
		.clk            (sys_sdram_pll_0_sys_clk_clk),                               //   clk.clk
		.reset_n        (~rst_controller_reset_out_reset),                           // reset.reset_n
		.az_addr        (mm_interconnect_0_new_sdram_controller_0_s1_address),       //    s1.address
		.az_be_n        (~mm_interconnect_0_new_sdram_controller_0_s1_byteenable),   //      .byteenable_n
		.az_cs          (mm_interconnect_0_new_sdram_controller_0_s1_chipselect),    //      .chipselect
		.az_data        (mm_interconnect_0_new_sdram_controller_0_s1_writedata),     //      .writedata
		.az_rd_n        (~mm_interconnect_0_new_sdram_controller_0_s1_read),         //      .read_n
		.az_wr_n        (~mm_interconnect_0_new_sdram_controller_0_s1_write),        //      .write_n
		.za_data        (mm_interconnect_0_new_sdram_controller_0_s1_readdata),      //      .readdata
		.za_valid       (mm_interconnect_0_new_sdram_controller_0_s1_readdatavalid), //      .readdatavalid
		.za_waitrequest (mm_interconnect_0_new_sdram_controller_0_s1_waitrequest),   //      .waitrequest
		.zs_addr        (sdram_wire_addr),                                           //  wire.export
		.zs_ba          (sdram_wire_ba),                                             //      .export
		.zs_cas_n       (sdram_wire_cas_n),                                          //      .export
		.zs_cke         (sdram_wire_cke),                                            //      .export
		.zs_cs_n        (sdram_wire_cs_n),                                           //      .export
		.zs_dq          (sdram_wire_dq),                                             //      .export
		.zs_dqm         (sdram_wire_dqm),                                            //      .export
		.zs_ras_n       (sdram_wire_ras_n),                                          //      .export
		.zs_we_n        (sdram_wire_we_n)                                            //      .export
	);

	disenyo_qsys_sys_sdram_pll_0 sys_sdram_pll_0 (
		.ref_clk_clk        (clk_clk),                            //      ref_clk.clk
		.ref_reset_reset    (rst_controller_002_reset_out_reset), //    ref_reset.reset
		.sys_clk_clk        (sys_sdram_pll_0_sys_clk_clk),        //      sys_clk.clk
		.sdram_clk_clk      (sdram_clk_clk),                      //    sdram_clk.clk
		.reset_source_reset (sys_sdram_pll_0_reset_source_reset)  // reset_source.reset
	);

	disenyo_qsys_mm_interconnect_0 mm_interconnect_0 (
		.sys_sdram_pll_0_sys_clk_clk                                    (sys_sdram_pll_0_sys_clk_clk),                               //                                  sys_sdram_pll_0_sys_clk.clk
		.ensamblado_procesador_0_reset_sink_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                            // ensamblado_procesador_0_reset_sink_reset_bridge_in_reset.reset
		.master_0_clk_reset_reset_bridge_in_reset_reset                 (rst_controller_reset_out_reset),                            //                 master_0_clk_reset_reset_bridge_in_reset.reset
		.ensamblado_procesador_0_avalon_master_B_address                (ensamblado_procesador_0_avalon_master_b_address),           //                  ensamblado_procesador_0_avalon_master_B.address
		.ensamblado_procesador_0_avalon_master_B_waitrequest            (ensamblado_procesador_0_avalon_master_b_waitrequest),       //                                                         .waitrequest
		.ensamblado_procesador_0_avalon_master_B_byteenable             (ensamblado_procesador_0_avalon_master_b_byteenable),        //                                                         .byteenable
		.ensamblado_procesador_0_avalon_master_B_read                   (ensamblado_procesador_0_avalon_master_b_read),              //                                                         .read
		.ensamblado_procesador_0_avalon_master_B_readdata               (ensamblado_procesador_0_avalon_master_b_readdata),          //                                                         .readdata
		.ensamblado_procesador_0_avalon_master_B_readdatavalid          (ensamblado_procesador_0_avalon_master_b_readdatavalid),     //                                                         .readdatavalid
		.ensamblado_procesador_0_avalon_master_M_address                (ensamblado_procesador_0_avalon_master_m_address),           //                  ensamblado_procesador_0_avalon_master_M.address
		.ensamblado_procesador_0_avalon_master_M_waitrequest            (ensamblado_procesador_0_avalon_master_m_waitrequest),       //                                                         .waitrequest
		.ensamblado_procesador_0_avalon_master_M_byteenable             (ensamblado_procesador_0_avalon_master_m_byteenable),        //                                                         .byteenable
		.ensamblado_procesador_0_avalon_master_M_read                   (ensamblado_procesador_0_avalon_master_m_read),              //                                                         .read
		.ensamblado_procesador_0_avalon_master_M_readdata               (ensamblado_procesador_0_avalon_master_m_readdata),          //                                                         .readdata
		.ensamblado_procesador_0_avalon_master_M_readdatavalid          (ensamblado_procesador_0_avalon_master_m_readdatavalid),     //                                                         .readdatavalid
		.ensamblado_procesador_0_avalon_master_M_write                  (ensamblado_procesador_0_avalon_master_m_write),             //                                                         .write
		.ensamblado_procesador_0_avalon_master_M_writedata              (ensamblado_procesador_0_avalon_master_m_writedata),         //                                                         .writedata
		.master_0_master_address                                        (master_0_master_address),                                   //                                          master_0_master.address
		.master_0_master_waitrequest                                    (master_0_master_waitrequest),                               //                                                         .waitrequest
		.master_0_master_byteenable                                     (master_0_master_byteenable),                                //                                                         .byteenable
		.master_0_master_read                                           (master_0_master_read),                                      //                                                         .read
		.master_0_master_readdata                                       (master_0_master_readdata),                                  //                                                         .readdata
		.master_0_master_readdatavalid                                  (master_0_master_readdatavalid),                             //                                                         .readdatavalid
		.master_0_master_write                                          (master_0_master_write),                                     //                                                         .write
		.master_0_master_writedata                                      (master_0_master_writedata),                                 //                                                         .writedata
		.new_sdram_controller_0_s1_address                              (mm_interconnect_0_new_sdram_controller_0_s1_address),       //                                new_sdram_controller_0_s1.address
		.new_sdram_controller_0_s1_write                                (mm_interconnect_0_new_sdram_controller_0_s1_write),         //                                                         .write
		.new_sdram_controller_0_s1_read                                 (mm_interconnect_0_new_sdram_controller_0_s1_read),          //                                                         .read
		.new_sdram_controller_0_s1_readdata                             (mm_interconnect_0_new_sdram_controller_0_s1_readdata),      //                                                         .readdata
		.new_sdram_controller_0_s1_writedata                            (mm_interconnect_0_new_sdram_controller_0_s1_writedata),     //                                                         .writedata
		.new_sdram_controller_0_s1_byteenable                           (mm_interconnect_0_new_sdram_controller_0_s1_byteenable),    //                                                         .byteenable
		.new_sdram_controller_0_s1_readdatavalid                        (mm_interconnect_0_new_sdram_controller_0_s1_readdatavalid), //                                                         .readdatavalid
		.new_sdram_controller_0_s1_waitrequest                          (mm_interconnect_0_new_sdram_controller_0_s1_waitrequest),   //                                                         .waitrequest
		.new_sdram_controller_0_s1_chipselect                           (mm_interconnect_0_new_sdram_controller_0_s1_chipselect)     //                                                         .chipselect
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (3),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (master_0_master_reset_reset),        // reset_in1.reset
		.reset_in2      (sys_sdram_pll_0_reset_source_reset), // reset_in2.reset
		.clk            (sys_sdram_pll_0_sys_clk_clk),        //       clk.clk
		.reset_out      (rst_controller_reset_out_reset),     // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (3),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (master_0_master_reset_reset),        // reset_in1.reset
		.reset_in2      (sys_sdram_pll_0_reset_source_reset), // reset_in2.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_002 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.clk            (clk_clk),                            //       clk.clk
		.reset_out      (rst_controller_002_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_in1      (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

endmodule
